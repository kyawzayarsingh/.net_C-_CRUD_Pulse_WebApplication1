@model WebApplication1.Models.Employee

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <b>Multiple Submit Button in a Sigle Form</b>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @* We have to declare a name to each submit type to catch value in Controller *@
                <input type="submit" value="Create" name="create" class="btn btn-default" />
                <input type="submit" value="Edit" name="edit" class="btn btn-default" />

                @*if we give the input type to the same name, we can catch exactly the name of the form in the Controller*@
                @*<input type="submit" value="Create" name="submitData" class="btn btn-default" />
                    <input type="submit" value="Edit" name="submitData" class="btn btn-default" />*@

                @* if you have one button so in your upper Begin Form you can add action,Controller, FormMethod
                    if you have two button and you want if create btn click, Go to Index Action Method, if edit
                     btn click, Go to Edit Action Method*@
                @*<input type="submit" value="Create" formaction="/Home/Index" class="btn btn-default" />
                    <input type="submit" value="Edit" formaction="/Home/Edit" class="btn btn-default" />*@
            </div>
        </div>
    </div>
}

<br />
@{ Html.RenderAction("Raj"); }
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
